// automatically generated by the FlatBuffers compiler, do not modify

package MyGame;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PointTwo extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PointTwo getRootAsPointTwo(ByteBuffer _bb) { return getRootAsPointTwo(_bb, new PointTwo()); }
  public static PointTwo getRootAsPointTwo(ByteBuffer _bb, PointTwo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PointTwo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long a() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long b() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createPointTwo(FlatBufferBuilder builder,
      long a,
      long b) {
    builder.startTable(2);
    PointTwo.addB(builder, b);
    PointTwo.addA(builder, a);
    return PointTwo.endPointTwo(builder);
  }

  public static void startPointTwo(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addA(FlatBufferBuilder builder, long a) { builder.addInt(0, (int) a, (int) 0L); }
  public static void addB(FlatBufferBuilder builder, long b) { builder.addInt(1, (int) b, (int) 0L); }
  public static int endPointTwo(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PointTwo get(int j) { return get(new PointTwo(), j); }
    public PointTwo get(PointTwo obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public PointTwoT unpack() {
    PointTwoT _o = new PointTwoT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(PointTwoT _o) {
    long _oA = a();
    _o.setA(_oA);
    long _oB = b();
    _o.setB(_oB);
  }
  public static int pack(FlatBufferBuilder builder, PointTwoT _o) {
    if (_o == null) return 0;
    return createPointTwo(
      builder,
      _o.getA(),
      _o.getB());
  }
}

